(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     25467,        556]
NotebookOptionsPosition[     24966,        538]
NotebookOutlinePosition[     25380,        555]
CellTagsIndexPosition[     25337,        552]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{"DynamicModule", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"array", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomChoice", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "20"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "20"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"k", "=", "20"}], ",", 
         RowBox[{"Going", "=", "False"}], ",", 
         RowBox[{"map", "=", "\"\<torus\>\""}], ",", "GoNext"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"GoNext", "[", 
          RowBox[{"array_", ",", "k_", ",", "map_"}], "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ip", ",", "jp", ",", "in", ",", "jn", ",", "temp"}], 
            "}"}], ",", 
           RowBox[{"Switch", "[", 
            RowBox[{"map", ",", "\"\<torus\>\"", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ip", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"jp", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"j", "\[Equal]", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"j", "-", "1"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"in", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"i", "\[Equal]", "k"}], ",", "1", ",", 
                    RowBox[{"i", "+", "1"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"jn", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"j", "\[Equal]", "k"}], ",", "1", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"temp", "=", 
                  RowBox[{
                   RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"ip", ",", "jp"}], "]"}], "]"}], "+", 
                   RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "jp"}], "]"}], "]"}], "+", 
                   RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"in", ",", "jp"}], "]"}], "]"}], "+", 
                   RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"ip", ",", "j"}], "]"}], "]"}], "+", 
                   RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"in", ",", "j"}], "]"}], "]"}], "+", 
                   RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"ip", ",", "jn"}], "]"}], "]"}], "+", 
                   RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "jn"}], "]"}], "]"}], "+", 
                   RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"in", ",", "jn"}], "]"}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Switch", "[", 
                  RowBox[{"temp", ",", "2", ",", 
                   RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "3", ",", "1",
                    ",", "_", ",", "0"}], "]"}]}], ")"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "k"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}], ",", 
             "\"\<cylinder\>\"", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ip", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"jp", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"j", "\[Equal]", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"j", "-", "1"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"in", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"i", "\[Equal]", "k"}], ",", "1", ",", 
                    RowBox[{"i", "+", "1"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"jn", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"j", "\[Equal]", "k"}], ",", "1", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"temp", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "k"}]}], ",", "0", ",", 
                    RowBox[{
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"ip", ",", "jp"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "jp"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"in", ",", "jp"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"ip", ",", "j"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"in", ",", "j"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"ip", ",", "jn"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "jn"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"in", ",", "jn"}], "]"}], "]"}]}]}], "]"}]}], ";",
                  "\[IndentingNewLine]", 
                 RowBox[{"Switch", "[", 
                  RowBox[{"temp", ",", "2", ",", 
                   RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "3", ",", "1",
                    ",", "_", ",", "0"}], "]"}]}], ")"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "k"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}], ",", 
             "\"\<square\>\"", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ip", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"jp", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"j", "\[Equal]", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"j", "-", "1"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"in", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"i", "\[Equal]", "k"}], ",", "1", ",", 
                    RowBox[{"i", "+", "1"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"jn", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"j", "\[Equal]", "k"}], ",", "1", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"temp", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "k"}], "||", 
                    RowBox[{"j", "\[Equal]", "1"}], "||", 
                    RowBox[{"j", "\[Equal]", "k"}]}], ",", "0", ",", 
                    RowBox[{
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"ip", ",", "jp"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "jp"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"in", ",", "jp"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"ip", ",", "j"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"in", ",", "j"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"ip", ",", "jn"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "jn"}], "]"}], "]"}], "+", 
                    RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"in", ",", "jn"}], "]"}], "]"}]}]}], "]"}]}], ";",
                  "\[IndentingNewLine]", 
                 RowBox[{"Switch", "[", 
                  RowBox[{"temp", ",", "2", ",", 
                   RowBox[{"array", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "3", ",", "1",
                    ",", "_", ",", "0"}], "]"}]}], ")"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "k"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}]}], "]"}]}], 
          "]"}]}], ";", 
        RowBox[{"Panel", "[", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Column", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\"\<Map:\>\"", ",", 
                  RowBox[{"PopupMenu", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "map", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<torus\>\"", ",", "\"\<cylinder\>\"", ",", 
                    "\"\<square\>\""}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Row", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<Size:\>\"", ",", 
                   RowBox[{"Dynamic", "[", "k", "]"}], ",", 
                   RowBox[{"Slider", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "k", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "100", ",", "1"}], "}"}]}], "]"}]}], 
                  "}"}], ",", "\"\< \>\""}], "]"}], ",", 
               RowBox[{"Row", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<Control:\>\"", ",", 
                   RowBox[{"Button", "[", 
                    RowBox[{"\"\<Go\>\"", ",", 
                    RowBox[{"Going", "=", "True"}]}], "]"}], ",", 
                   RowBox[{"Button", "[", 
                    RowBox[{"\"\<Stop\>\"", ",", 
                    RowBox[{"Going", "=", "False"}]}], "]"}], ",", 
                   RowBox[{"Button", "[", 
                    RowBox[{"\"\<Reset\>\"", ",", 
                    RowBox[{"array", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"RandomChoice", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}]}]}], 
                    "]"}], ",", 
                   RowBox[{"Button", "[", 
                    RowBox[{"\"\<GoNext\>\"", ",", 
                    RowBox[{"array", "=", 
                    RowBox[{"GoNext", "[", 
                    RowBox[{"array", ",", "k", ",", "map"}], "]"}]}]}], 
                    "]"}]}], "}"}], ",", "\"\< \>\""}], "]"}], ",", 
               RowBox[{"Column", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{"\"\<\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "27"}], "}"}]}], "]"}], "]"}], 
               ",", 
               RowBox[{"Dynamic", "[", 
                RowBox[{"If", "[", 
                 RowBox[{"Going", ",", "\"\<Going\>\"", ",", "\"\<Stop\>\""}],
                  "]"}], "]"}]}], "}"}], "]"}], " ", 
            RowBox[{"Panel", "[", 
             RowBox[{"Deploy", "[", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"ArrayPlot", "[", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"Going", ",", 
                   RowBox[{"array", "=", 
                    RowBox[{"GoNext", "[", 
                    RowBox[{"array", ",", "k", ",", "map"}], "]"}]}], ",", 
                   "array"}], "]"}], ",", 
                 RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
                 RowBox[{"MeshStyle", "\[Rule]", "White"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], "]"}], 
              "]"}], "]"}]}], "}"}], "]"}], "]"}]}]}], "]"}], 
     "\[IndentingNewLine]"}]},
   {"\[Placeholder]"}
  }]], "Input",
 CellChangeTimes->{{3.835677541117402*^9, 3.835677561371169*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"836fe123-2cd8-4b32-b90e-9c560bb6c376"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    DynamicModuleBox[{$CellContext`array$$ = {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
     0, 0, 1, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
      0, 0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1,
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, $CellContext`k$$ = 
     16, $CellContext`Going$$ = True, $CellContext`map$$ = 
     "square", $CellContext`GoNext$$}, 
     PanelBox[
      TemplateBox[{
        RowBox[{
          TagBox[
           GridBox[{{
              TemplateBox[{"\"Map:\"", 
                PopupMenuBox[
                 Dynamic[$CellContext`map$$], {
                 "torus" -> "\"torus\"", "cylinder" -> "\"cylinder\"", 
                  "square" -> "\"square\""}]}, "RowDefault"]}, {
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"Size:\"", 
                DynamicBox[
                 ToBoxes[$CellContext`k$$, StandardForm]], 
                SliderBox[
                 Dynamic[$CellContext`k$$], {10, 100, 1}]}, 
               "RowWithSeparators"]}, {
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"Control:\"", 
                ButtonBox[
                "\"Go\"", ButtonFunction :> ($CellContext`Going$$ = True), 
                 Appearance -> Automatic, Evaluator -> Automatic, Method -> 
                 "Preemptive"], 
                ButtonBox[
                "\"Stop\"", ButtonFunction :> ($CellContext`Going$$ = False), 
                 Appearance -> Automatic, Evaluator -> Automatic, Method -> 
                 "Preemptive"], 
                ButtonBox[
                "\"Reset\"", ButtonFunction :> ($CellContext`array$$ = Table[
                    
                    RandomChoice[{1, 0}], {$CellContext`i, 
                    1, $CellContext`k$$}, {$CellContext`j, 
                    1, $CellContext`k$$}]), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                ButtonBox[
                "\"GoNext\"", 
                 ButtonFunction :> ($CellContext`array$$ = \
$CellContext`GoNext$$[$CellContext`array$$, $CellContext`k$$, \
$CellContext`map$$]), Appearance -> Automatic, Evaluator -> Automatic, Method -> 
                 "Preemptive"]}, "RowWithSeparators"]}, {
              TagBox[
               
               GridBox[{{"\"\""}, {"\"\""}, {"\"\""}, {"\"\""}, {"\"\""}, {
                 "\"\""}, {"\"\""}, {"\"\""}, {"\"\""}, {"\"\""}, {"\"\""}, {
                 "\"\""}, {"\"\""}, {"\"\""}, {"\"\""}, {"\"\""}, {"\"\""}, {
                 "\"\""}, {"\"\""}, {"\"\""}, {"\"\""}, {"\"\""}, {"\"\""}, {
                 "\"\""}, {"\"\""}, {"\"\""}, {"\"\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
                "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"]}, {
              DynamicBox[
               ToBoxes[
                If[$CellContext`Going$$, "Going", "Stop"], StandardForm]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
           " ", 
          PanelBox[
           TagBox[
            DynamicBox[
             ToBoxes[
              ArrayPlot[
               
               If[$CellContext`Going$$, $CellContext`array$$ = \
$CellContext`GoNext$$[$CellContext`array$$, $CellContext`k$$, \
$CellContext`map$$], $CellContext`array$$], Mesh -> All, MeshStyle -> White, 
               ImageSize -> 500], StandardForm]], Deploy, DefaultBaseStyle -> 
            "Deploy"]]}]},
       "RowDefault"]],
     DynamicModuleValues:>{{DownValues[$CellContext`GoNext$$] = {HoldPattern[
            $CellContext`GoNext$$[
             Pattern[$CellContext`array, 
              Blank[]], 
             Pattern[$CellContext`k, 
              Blank[]], 
             Pattern[$CellContext`map, 
              Blank[]]]] :> 
          Module[{$CellContext`ip, $CellContext`jp, $CellContext`in, \
$CellContext`jn, $CellContext`temp}, 
            Switch[$CellContext`map, "torus", 
             
             Table[$CellContext`ip = 
               If[$CellContext`i == 1, -1, $CellContext`i - 
                 1]; $CellContext`jp = 
               If[$CellContext`j == 1, -1, $CellContext`j - 
                 1]; $CellContext`in = 
               If[$CellContext`i == $CellContext`k, 1, $CellContext`i + 
                 1]; $CellContext`jn = 
               If[$CellContext`j == $CellContext`k, 1, $CellContext`j + 
                 1]; $CellContext`temp = 
               Part[$CellContext`array, $CellContext`ip, $CellContext`jp] + 
                Part[$CellContext`array, $CellContext`i, $CellContext`jp] + 
                Part[$CellContext`array, $CellContext`in, $CellContext`jp] + 
                Part[$CellContext`array, $CellContext`ip, $CellContext`j] + 
                Part[$CellContext`array, $CellContext`in, $CellContext`j] + 
                Part[$CellContext`array, $CellContext`ip, $CellContext`jn] + 
                Part[$CellContext`array, $CellContext`i, $CellContext`jn] + 
                Part[$CellContext`array, $CellContext`in, $CellContext`jn]; 
              Switch[$CellContext`temp, 2, 
                Part[$CellContext`array, $CellContext`i, $CellContext`j], 3, 
                1, 
                Blank[], 0], {$CellContext`i, 
               1, $CellContext`k}, {$CellContext`j, 1, $CellContext`k}], 
             "cylinder", 
             
             Table[$CellContext`ip = 
               If[$CellContext`i == 1, -1, $CellContext`i - 
                 1]; $CellContext`jp = 
               If[$CellContext`j == 1, -1, $CellContext`j - 
                 1]; $CellContext`in = 
               If[$CellContext`i == $CellContext`k, 1, $CellContext`i + 
                 1]; $CellContext`jn = 
               If[$CellContext`j == $CellContext`k, 1, $CellContext`j + 
                 1]; $CellContext`temp = If[
                 Or[$CellContext`i == 1, $CellContext`i == $CellContext`k], 0,
                  Part[$CellContext`array, $CellContext`ip, $CellContext`jp] + 
                 Part[$CellContext`array, $CellContext`i, $CellContext`jp] + 
                 Part[$CellContext`array, $CellContext`in, $CellContext`jp] + 
                 Part[$CellContext`array, $CellContext`ip, $CellContext`j] + 
                 Part[$CellContext`array, $CellContext`in, $CellContext`j] + 
                 Part[$CellContext`array, $CellContext`ip, $CellContext`jn] + 
                 Part[$CellContext`array, $CellContext`i, $CellContext`jn] + 
                 Part[$CellContext`array, $CellContext`in, $CellContext`jn]]; 
              Switch[$CellContext`temp, 2, 
                Part[$CellContext`array, $CellContext`i, $CellContext`j], 3, 
                1, 
                Blank[], 0], {$CellContext`i, 
               1, $CellContext`k}, {$CellContext`j, 1, $CellContext`k}], 
             "square", 
             
             Table[$CellContext`ip = 
               If[$CellContext`i == 1, -1, $CellContext`i - 
                 1]; $CellContext`jp = 
               If[$CellContext`j == 1, -1, $CellContext`j - 
                 1]; $CellContext`in = 
               If[$CellContext`i == $CellContext`k, 1, $CellContext`i + 
                 1]; $CellContext`jn = 
               If[$CellContext`j == $CellContext`k, 1, $CellContext`j + 
                 1]; $CellContext`temp = If[
                 
                 Or[$CellContext`i == 
                  1, $CellContext`i == $CellContext`k, $CellContext`j == 
                  1, $CellContext`j == $CellContext`k], 0, 
                 Part[$CellContext`array, $CellContext`ip, $CellContext`jp] + 
                 Part[$CellContext`array, $CellContext`i, $CellContext`jp] + 
                 Part[$CellContext`array, $CellContext`in, $CellContext`jp] + 
                 Part[$CellContext`array, $CellContext`ip, $CellContext`j] + 
                 Part[$CellContext`array, $CellContext`in, $CellContext`j] + 
                 Part[$CellContext`array, $CellContext`ip, $CellContext`jn] + 
                 Part[$CellContext`array, $CellContext`i, $CellContext`jn] + 
                 Part[$CellContext`array, $CellContext`in, $CellContext`jn]]; 
              Switch[$CellContext`temp, 2, 
                Part[$CellContext`array, $CellContext`i, $CellContext`j], 3, 
                1, 
                Blank[], 0], {$CellContext`i, 
               1, $CellContext`k}, {$CellContext`j, 1, $CellContext`k}]]]}}}],
     "}"}], ",", 
   RowBox[{"{", "\[Placeholder]", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.835677565105832*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"619af9a7-34c8-477f-b6f6-992ff6ab2b89"]
}, Open  ]]
},
WindowSize->{1454, 917},
WindowMargins->{{419, Automatic}, {211, Automatic}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (2021\:5e742\:67082\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9ba36029-08aa-4ce3-88fe-da2b1fc73272"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 14863, 333, 637, "Input",ExpressionUUID->"836fe123-2cd8-4b32-b90e-9c560bb6c376"],
Cell[15446, 357, 9504, 178, 643, "Output",ExpressionUUID->"619af9a7-34c8-477f-b6f6-992ff6ab2b89"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

